---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: zitadel
  namespace: security
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  interval: 30m
  chart:
    spec:
      chart: zitadel
      version: 7.14.0
      sourceRef:
        kind: HelmRepository
        name: zitadel
        namespace: flux-system
  values:
    zitadel:
      # The ZITADEL config under configmapConfig is written to a Kubernetes ConfigMap
      # See all defaults here:
      # https://github.com/zitadel/zitadel/blob/main/cmd/defaults.yaml
      configmapConfig:
        Log:
          Level: info
          Formatter:
            Format: text
        FirstInstance:
          Org:
            Human:
              # In case that UserLoginMustBeDomain is false (default) and if you don't overwrite the username with an email,
              # it will be suffixed by the org domain (org-name + domain from config).
              # for example zitadel-admin in org `My Org` on domain.tld -> zitadel-admin@my-org.domain.tld
              UserName: zit@${SECRET_DOMAIN} # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_USERNAME
              FirstName: ZITADEL # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_FIRSTNAME
              LastName: Admin # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_LASTNAME
              NickName: # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_NICKNAME
              DisplayName: # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_DISPLAYNAME
              Email:
                Address: zit@${SECRET_DOMAIN} # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_EMAIL_ADDRESS
                Verified: true # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_EMAIL_VERIFIED
              PreferredLanguage: en # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_PREFERREDLANGUAGE
              Gender: # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_GENDER
              Phone:
                Number: # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_PHONE_NUMBER
                Verified: # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_PHONE_VERIFIED
              Password: Password123!! # ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_PASSWORD
        Database:
          postgres:
            Host: postgres16-rw.database.svc.cluster.local
            Port: 5432
            Database: zitadel
            User:
              SSL:
                Mode: disable
            Admin:
              SSL:
                Mode: disable
        LogStore:
          Access:
            Stdout:
              Enabled: false

        ExternalDomain: &host auth.${SECRET_DOMAIN}
        # specifies if ZITADEL is exposed externally through TLS
        # this must be set to true even if TLS is not enabled on ZITADEL itself
        # but TLS traffic is terminated on a reverse proxy
        # !!! Changing this after initial setup breaks your system !!!
        ExternalSecure: true
        ExternalPort: 443
        TLS:
          # if enabled, ZITADEL will serve all traffic over TLS (HTTPS and gRPC)
          # you must then also provide a private key and certificate to be used for the connection
          # either directly or by a path to the corresponding file
          Enabled: false
        WebAuthNName: ZITADEL
        # The Secret containing the root CA Certificate at key ca.crt needed for establishing secure database connections
      dbSslRootCrtSecret:
      # The Secret containing the client CA Certificate and key at tls.crt and tls.key needed for establishing secure database connections
      dbSslClientCrtSecret:
      masterkeySecretName: zitadel-secret


    replicaCount: 1
    image:
      repository: ghcr.io/zitadel/zitadel
      tag: v2.50.2
      pullPolicy: IfNotPresent

    # Additional environment variables
    env:
      - name: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
      - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
      - name: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
      - name: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: zitadel-secret
            key: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD

    service:
      type: ClusterIP
      port: 8080
      protocol: http2
      annotations: {}

    ingress:
      enabled: true
      className: internal
      annotations:
        external-dns.alpha.kubernetes.io/target: "ingress-cf.${SECRET_DOMAIN}"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/description: Authentication Service
        gethomepage.dev/group: Security
        gethomepage.dev/icon: zitadel.png
        gethomepage.dev/name: Zitadel
      hosts:
        - host: *host
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host

    initJob:
      # Once ZITADEL is installed, the initJob can be disabled.
      enabled: true

    readinessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 5
      failureThreshold: 3

    livenessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 5
      failureThreshold: 3

    startupProbe:
      enabled: true
      periodSeconds: 1
      failureThreshold: 30

    metrics:
      enabled: false
      serviceMonitor:
        enabled: false